# Generated by CMake 3.3.2

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget Jamoma::DSP Jamoma::AnalysisLib Jamoma::AudioEngine Jamoma::Clipper Jamoma::Crossfade Jamoma::EffectsLib Jamoma::FFTLib Jamoma::FilterLib Jamoma::FunctionLib Jamoma::GeneratorLib Jamoma::ResamplingLib Jamoma::SoundfileLib Jamoma::SpatLib Jamoma::TrajectoryLib Jamoma::WindowFunctionLib)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)

# Create imported target Jamoma::DSP
add_library(Jamoma::DSP SHARED IMPORTED)

set_target_properties(Jamoma::DSP PROPERTIES
  COMPATIBLE_INTERFACE_STRING "Jamoma_MAJOR_VERSION"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "Jamoma::Foundation"
)

# Create imported target Jamoma::AnalysisLib
add_library(Jamoma::AnalysisLib SHARED IMPORTED)

set_target_properties(Jamoma::AnalysisLib PROPERTIES
  INTERFACE_LINK_LIBRARIES "Jamoma::DSP"
)

# Create imported target Jamoma::AudioEngine
add_library(Jamoma::AudioEngine SHARED IMPORTED)

set_target_properties(Jamoma::AudioEngine PROPERTIES
  INTERFACE_LINK_LIBRARIES "Jamoma::DSP;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Carbon.framework;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/CoreAudio.framework;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/AudioUnit.framework;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/AudioToolbox.framework"
)

# Create imported target Jamoma::Clipper
add_library(Jamoma::Clipper SHARED IMPORTED)

set_target_properties(Jamoma::Clipper PROPERTIES
  INTERFACE_LINK_LIBRARIES "Jamoma::DSP"
)

# Create imported target Jamoma::Crossfade
add_library(Jamoma::Crossfade SHARED IMPORTED)

set_target_properties(Jamoma::Crossfade PROPERTIES
  INTERFACE_LINK_LIBRARIES "Jamoma::DSP"
)

# Create imported target Jamoma::EffectsLib
add_library(Jamoma::EffectsLib SHARED IMPORTED)

set_target_properties(Jamoma::EffectsLib PROPERTIES
  INTERFACE_LINK_LIBRARIES "Jamoma::DSP"
)

# Create imported target Jamoma::FFTLib
add_library(Jamoma::FFTLib SHARED IMPORTED)

set_target_properties(Jamoma::FFTLib PROPERTIES
  INTERFACE_LINK_LIBRARIES "Jamoma::DSP"
)

# Create imported target Jamoma::FilterLib
add_library(Jamoma::FilterLib SHARED IMPORTED)

set_target_properties(Jamoma::FilterLib PROPERTIES
  INTERFACE_LINK_LIBRARIES "Jamoma::DSP"
)

# Create imported target Jamoma::FunctionLib
add_library(Jamoma::FunctionLib SHARED IMPORTED)

set_target_properties(Jamoma::FunctionLib PROPERTIES
  INTERFACE_LINK_LIBRARIES "Jamoma::DSP"
)

# Create imported target Jamoma::GeneratorLib
add_library(Jamoma::GeneratorLib SHARED IMPORTED)

set_target_properties(Jamoma::GeneratorLib PROPERTIES
  INTERFACE_LINK_LIBRARIES "Jamoma::DSP"
)

# Create imported target Jamoma::ResamplingLib
add_library(Jamoma::ResamplingLib SHARED IMPORTED)

set_target_properties(Jamoma::ResamplingLib PROPERTIES
  INTERFACE_LINK_LIBRARIES "Jamoma::DSP"
)

# Create imported target Jamoma::SoundfileLib
add_library(Jamoma::SoundfileLib SHARED IMPORTED)

set_target_properties(Jamoma::SoundfileLib PROPERTIES
  INTERFACE_LINK_LIBRARIES "Jamoma::DSP"
)

# Create imported target Jamoma::SpatLib
add_library(Jamoma::SpatLib SHARED IMPORTED)

set_target_properties(Jamoma::SpatLib PROPERTIES
  INTERFACE_LINK_LIBRARIES "Jamoma::DSP"
)

# Create imported target Jamoma::TrajectoryLib
add_library(Jamoma::TrajectoryLib SHARED IMPORTED)

set_target_properties(Jamoma::TrajectoryLib PROPERTIES
  INTERFACE_LINK_LIBRARIES "Jamoma::DSP"
)

# Create imported target Jamoma::WindowFunctionLib
add_library(Jamoma::WindowFunctionLib SHARED IMPORTED)

set_target_properties(Jamoma::WindowFunctionLib PROPERTIES
  INTERFACE_LINK_LIBRARIES "Jamoma::DSP"
)

if(CMAKE_VERSION VERSION_LESS 2.8.12)
  message(FATAL_ERROR "This file relies on consumers using CMake 2.8.12 or greater.")
endif()

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/JamomaDSPTargets-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# Make sure the targets which have been exported in some other 
# export set exist.
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
foreach(_target "Jamoma::Foundation" )
  if(NOT TARGET "${_target}" )
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets "${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets} ${_target}")
  endif()
endforeach()

if(DEFINED ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
  if(CMAKE_FIND_PACKAGE_NAME)
    set( ${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    set( ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  else()
    message(FATAL_ERROR "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  endif()
endif()
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
